---
# ------------------------------------------------------------------------
# Telekom Security - Compliance Automation
# SSH (3.04)
# Tasks: 01 SSH Requierments
# ------------------------------------------------------------------------

# --- Hardening ---------------------------------------------------------------

# Req 1:	The SSH protocol version 2 must be used.
# Req 2:	SSH moduli smaller than 2048 must not be used.

- name: req-002.1 check if /etc/ssh/moduli for short values
  shell: awk '$5 < {{ moduli_minimum }}' /etc/ssh/moduli
  register: ssh_moduli
  changed_when: false
  when: config_ssh_server and not ansible_check_mode

- name: req-002.1 remove all primes smaller than defined value
  shell: awk '$5 >= {{ moduli_minimum }}' /etc/ssh/moduli > /etc/ssh/moduli.new ;
         [ -r /etc/ssh/moduli.new -a -s /etc/ssh/moduli.new ] && mv /etc/ssh/moduli.new /etc/ssh/moduli || true
  notify: restart sshd
  when: config_ssh_server and
        ( not ansible_check_mode and ssh_moduli.stdout != "")

# Req 3:	Only approved key exchange algorithms must be used.
# Req 4:	Only approved ciphers algorithms must be used.
# Req 5:	Only approved MAC algorithms must be used.
# Req 6:	SSH logging must be enabled.
# Req 7:	SSH LoginGraceTime must be set to one minute or less.
# Req 8:	SSH MaxAuthTries must be set to 5 or less.
# Req 9:	SSH root login must be disabled.
# Req 10:	SSH strict mode must be enabled.
# Req 11:	SSH user authentication must be done with public keys.
# Req 12:	SSH password authentication must be disabled.
# Req 13:	SSH IgnoreRhosts must be enabled.
# Req 14:	SSH HostbasedAuthentication must be disabled.
# Req 15:	The usage of the SSH service must be restricted to dedicated groups
# or users.
# Req 16:	The SSH Idle Timeout Interval must be configured to an adequate time.
# Req 17:	SSH tunnel devices must be disabled.
# Req 18:	SSH TCP port forwarding must be disabled.
# Req 19:	SSH agent forwarding must be disabled.
# Req 20:	SSH gateway ports must be disabled.
# Req 21:	SSH X11 forwarding must be disabled.
# Req 22:	SSH PermitUserEnvironment must be disabled.
# Req 23:	SSH PermitEmptyPasswords must be disabled.
# Req 24:	If SFTP is activated, internal server of OpenSSH must be used.

- name: req-024.1 set configuration for sshd (req 1, 3 - 24)
  template:
    src: 'sshdconfig.j2'
    dest: '{{ sshd_conf_file }}'
    owner: "{{ sshd_conf_owner }}"
    group: "{{ sshd_conf_group }}"
    mode: "{{ sshd_conf_mode }}"
  notify: restart sshd
  when: config_ssh_server and not ansible_check_mode

- name: req-024.2 generate sftp group
  group:
    name: "{{ sftp_group }}"
    state: present
  when: config_ssh_server and
       ( set_sftp_chroot and not ansible_check_mode )

# --- Compliance Check---------------------------------------------------------
# Req 1:	The SSH protocol version 2 must be used.

- block:
    - name: req-001.1 check ssh version
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "Protocol {{ssh_version}}"
        state: present
      register: check_ssh_ver
      failed_when: check_ssh_ver.changed
  rescue:
    - debug:
        msg: "Req-001 (1/1): FAILED"
  when: ansible_check_mode

# Req 2:	SSH moduli smaller than 2048 must not be used.

- block:
    - name: req-002.1 check if /etc/ssh/moduli are correct
      shell: awk '$5 < {{ moduli_minimum }}' /etc/ssh/moduli | wc -l
      register: check_ssh_moduli
      failed_when: check_ssh_moduli.stdout != "0"
      changed_when: false
      check_mode: no
  rescue:
    - debug:
        msg: "Req-002 (1/1): FAILED"
  when: ansible_check_mode

# Req 3:	Only approved key exchange algorithms must be used.

- block:
    - name: req-003.1 check ssh ciphers
      shell: cat /etc/ssh/sshd_config | grep {{ item }} | wc -l
      register: check_ssh_chiphers
      failed_when: check_ssh_chiphers.stdout == "0"
      changed_when: false
      check_mode: no
      with_items: "{{ ssh_ciphers }}"
  rescue:
    - debug:
        msg: "Req-003 (1/1): FAILED"
  when: ansible_check_mode

# Req 4:	Only approved ciphers algorithms must be used.

- block:
    - name: req-004.1 check ssh key exchange
      shell: cat /etc/ssh/sshd_config | grep {{ item }} | wc -l
      register: check_ssh_kex
      failed_when: check_ssh_kex.stdout == "0"
      changed_when: false
      check_mode: no
      with_items: "{{ ssh_key_ex }}"
  rescue:
    - debug:
        msg: "Req-004 (1/1): FAILED"
  when: ansible_check_mode

# Req 5:	Only approved MAC algorithms must be used.

- block:
    - name: req-005.1 check ssh mac algorithms
      shell: cat /etc/ssh/sshd_config | grep {{ item }} | wc -l
      register: check_ssh_macs
      failed_when: check_ssh_macs.stdout == "0"
      changed_when: false
      check_mode: no
      with_items: "{{ ssh_macs }}"
  rescue:
    - debug:
        msg: "Req-005 (1/1): FAILED"
  when: ansible_check_mode

# Req 6:	SSH logging must be enabled.

- block:
    - name: req-006.1 check ssh logging
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "{{ item }}"
        state: present
      register: check_ssh_log
      failed_when: check_ssh_log.changed
      with_items:
        - "SyslogFacility {{ssh_syslogfacility}}"
        - "LogLevel {{ssh_loglevel}}"
  rescue:
    - debug:
        msg: "Req-006 (1/1): FAILED"
  when: ansible_check_mode

# Req 7:	SSH LoginGraceTime must be set to one minute or less.

- block:
    - name: req-007.1 check ssh logingracetime configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "LoginGraceTime {{login_grace_time}}"
        state: present
      register: check_ssh_lgt
      failed_when: check_ssh_lgt.changed
  rescue:
    - debug:
        msg: "Req-007 (1/1): FAILED"
  when: ansible_check_mode

# Req 8:	SSH MaxAuthTries must be set to 5 or less.

- block:
    - name: req-008.1 check ssh maxauthtries configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "{{ item }}"
        state: present
      register: check_ssh_mat
      failed_when: check_ssh_mat.changed
      with_items:
        - "MaxAuthTries {{max_auth_tries}}"
        - "MaxSessions {{max_sessions}}"
        - "MaxStartups {{max_startups}}"
  rescue:
    - debug:
        msg: "Req-008 (1/1): FAILED"
  when: ansible_check_mode

# Req 9:	SSH root login must be disabled.

- block:
    - name: req-009.1 check root login for is disabled
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "PermitRootLogin {{ 'without-password' if (allow_root_login|bool) else 'no' }}"
        state: present
      register: check_ssh_root_login
      failed_when: check_ssh_root_login.changed
  rescue:
    - debug:
        msg: "Req-009 (1/1): FAILED"
  when: ansible_check_mode

# Req 10:	SSH strict mode must be enabled.

- block:
    - name: req-010.1 check ssh configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "StrictModes {{ 'yes' if (strict_mode|bool) else 'no' }}"
        state: present
      register: check_ssh_strict
      failed_when: check_ssh_strict.changed
  rescue:
    - debug:
        msg: "Req-010 (1/1): FAILED"
  when: ansible_check_mode

# Req 11:	SSH user authentication must be done with public keys.

- block:
    - name: req-011.1 check ssh user authentication
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "PubkeyAuthentication {{ 'yes' if (pubkey_auth|bool) else 'no' }}"
        state: present
      register: check_ssh_user_auth
      failed_when: check_ssh_user_auth.changed
  rescue:
    - debug:
        msg: "Req-011 (1/1): FAILED"
  when: ansible_check_mode

# Req 12:	SSH password authentication must be disabled.

- block:
    - name: req-012.1 check ssh if password authentication is disabled
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "PubkeyAuthentication {{ 'yes' if (pubkey_auth|bool) else 'no' }}"
        state: present
      register: check_ssh_password_auth
      failed_when: check_ssh_password_auth.changed
  rescue:
    - debug:
        msg: "Req-012 (1/1): FAILED"
  when: ansible_check_mode

# Req 13:	SSH IgnoreRhosts must be enabled.

- block:
    - name: req-013.1 check ssh ignorerhosts configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "IgnoreRhosts {{ 'yes' if (ignore_rhosts|bool) else 'no' }}"
        state: present
      register: check_ssh_ignore_hosts
      failed_when: check_ssh_ignore_hosts.changed
  rescue:
    - debug:
        msg: "Req-013 (1/1): FAILED"
  when: ansible_check_mode

# Req 14:	SSH HostbasedAuthentication must be disabled.

- block:
    - name: req-014.1 check ssh host based authentication configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "{{ item }}"
        state: present
      register: check_ssh_hba
      failed_when: check_ssh_hba.changed
      with_items:
        - "HostbasedAuthentication {{ 'yes' if (host_based_auth|bool) else 'no' }}"
        - "IgnoreUserKnownHosts {{ 'yes' if (ignore_known_hosts|bool) else 'no' }}"
  rescue:
    - debug:
        msg: "Req-014 (1/1): FAILED"
  when: ansible_check_mode

# Req 15:	The usage of the SSH service must be restricted to dedicated groups
  # or users.

- block:
    - name: req-015.1 check ssh configuration for pam use
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "UsePAM {{ 'yes' if (pam_for_ssh|bool) else 'no' }}"
        state: present
      register: check_ssh_pam
      failed_when: check_ssh_pam.changed
  rescue:
    - debug:
        msg: "Req-015 (1/5): FAILED"
  when: ansible_check_mode

- block:
    - name: req-015.2 check ssh configuration for deny users
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "DenyUsers {{ssh_deny_users}}"
        state: present
      register: check_ssh_deny_users
      failed_when: check_ssh_deny_users.changed
  rescue:
    - debug:
        msg: "Req-015 (2/5): FAILED"
  when: ansible_check_mode and ssh_deny_users != ""

- block:
    - name: req-015.3 check ssh configuration for allow user
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "AllowUsers {{ssh_allow_users}}"
        state: present
      register: check_ssh_allow_users
      failed_when: check_ssh_allow_users.changed
  rescue:
    - debug:
        msg: "Req-015 (3/5): FAILED"
  when: ansible_check_mode and ssh_allow_users != ""

- block:
    - name: req-015.4 check ssh configuration for deny groups
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "DenyGroups {{ssh_deny_groups}}"
        state: present
      register: check_ssh_deny_groups
      failed_when: check_ssh_deny_groups.changed
  rescue:
    - debug:
        msg: "Req-015 (4/5): FAILED"
  when: ansible_check_mode and ssh_deny_groups != ""

- block:
    - name: req-015.5 check ssh configuration for allow groups
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "AllowGroups {{ssh_allow_groups}}"
        state: present
      register: check_ssh_allow_groups
      failed_when: check_ssh_allow_groups.changed
  rescue:
    - debug:
        msg: "Req-015 (5/5): FAILED"
  when: ansible_check_mode and ssh_allow_groups != ""

# Req 16:	The SSH Idle Timeout Interval must be configured to an adequate time.

- block:
    - name: req-016.1 check ssh idle timeout configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "{{ item }}"
        state: present
      register: check_ssh_idle
      failed_when: check_ssh_idle.changed
      with_items:
        - "TCPKeepAlive {{ 'yes' if (tcp_keepalive|bool) else 'no' }}"
        - "ClientAliveInterval {{client_alive_interval}}"
        - "ClientAliveCountMax {{client_alive_count}}"
  rescue:
    - debug:
        msg: "Req-016 (1/1): FAILED"
  when: ansible_check_mode

# Req 17:	SSH tunnel devices must be disabled.

- block:
    - name: req-017.1 check ssh tunnel devices configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "PermitTunnel {{ 'yes' if (permit_tunnel|bool) else 'no' }}"
        state: present
      register: check_ssh_tunnel
      failed_when: check_ssh_tunnel.changed
  rescue:
    - debug:
        msg: "Req-017 (1/1): FAILED"
  when: ansible_check_mode

# Req 18:	SSH TCP port forwarding must be disabled.

- block:
    - name: req-018.1 check ssh tcp port forwarding configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "AllowTcpForwarding {{ 'yes' if (allow_tcp_forwarding|bool) else 'no' }}"
        state: present
      register: check_tcp_forward
      failed_when: check_tcp_forward.changed
  rescue:
    - debug:
        msg: "Req-018 (1/1): FAILED"
  when: ansible_check_mode

# Req 19:	SSH agent forwarding must be disabled.

- block:
    - name: req-019.1 check ssh agent forwarding configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "AllowAgentForwarding {{ 'yes' if (allow_agent_forwarding|bool) else 'no' }}"
        state: present
      register: check_ssh_agent_forward
      failed_when: check_ssh_agent_forward.changed
  rescue:
    - debug:
        msg: "Req-019 (1/1): FAILED"
  when: ansible_check_mode

# Req 20:	SSH gateway ports must be disabled.

- block:
    - name: req-020.1 check ssh gateway ports configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "GatewayPorts {{ 'yes' if (gw_ports|bool) else 'no' }}"
        state: present
      register: check_ssh_gw_ports
      failed_when: check_ssh_gw_ports.changed
  rescue:
    - debug:
        msg: "Req-020 (1/1): FAILED"
  when: ansible_check_mode

# Req 21:	SSH X11 forwarding must be disabled.

- block:
    - name: req-021.1 check ssh x11 forwarding configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "X11Forwarding {{ 'yes' if (x11_forwarding|bool) else 'no' }}"
        state: present
      register: check_ssh_x11
      failed_when: check_ssh_x11.changed
  rescue:
    - debug:
        msg: "Req-021 (1/1): FAILED"
  when: ansible_check_mode

# Req 22:	SSH PermitUserEnvironment must be disabled.

- block:
    - name: req-022.1 check ssh permit user enviroment configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "PermitUserEnvironment {{ 'yes' if (permit_user_env|bool) else 'no' }}"
        state: present
      register: check_ssh_user_env
      failed_when: check_ssh_user_env.changed
  rescue:
    - debug:
        msg: "Req-022 (1/1): FAILED"
  when: ansible_check_mode

# Req 23:	SSH PermitEmptyPasswords must be disabled.

- block:
    - name: req-023.0 check ssh permit empty passowrd configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "PermitEmptyPasswords {{ 'yes' if (permit_empty_pw|bool) else 'no' }}"
        state: present
      register: check_ssh_empty_pw
      failed_when: check_ssh_empty_pw.changed
  rescue:
    - debug:
        msg: "Req-023 (1/1): FAILED"
  when: ansible_check_mode

# Req 24:	If SFTP is activated, internal server of OpenSSH must be used.

- block:
    - name: req-024.1 check sftp configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "Subsystem sftp internal-sftp -l {{ sftp_logging }}"
        state: present
      register: check_sftp
      failed_when: check_sftp.changed
  rescue:
    - debug:
        msg: "Req-024 (1/3): FAILED"
  when: ansible_check_mode and set_sftp_enabled

- block:
    - name: req-024.2 check sftp configuration
      lineinfile:
        path: '/etc/ssh/sshd_config'
        line: "{{ item }}"
        state: present
      register: check_sftp_chroot
      failed_when: check_sftp_chroot.changed
      with_items:
        - "AllowTcpForwarding {{ 'yes' if (sftp_tcp_forwarding|bool) else 'no' }}"
        - "AllowAgentForwarding {{ 'yes' if (sftp_agent_forwarding|bool) else 'no' }}"
        - "PasswordAuthentication {{ 'yes' if (sftp_password_auth|bool) else 'no' }}"
        - "PermitRootLogin {{ 'yes' if (sftp_root_login|bool) else 'no' }}"
        - "X11Forwarding {{ 'yes' if (sftp_x11_forwardning|bool) else 'no' }}"
  rescue:
    - debug:
        msg: "Req-024 (2/3): FAILED"
  when: ansible_check_mode and set_sftp_chroot

- block:
    - name: req-024.3 check for sftp group
      group:
        name: "{{ sftp_group }}"
        state: present
      register: check_sftp_group
      failed_when: check_sftp_group.changed
  rescue:
    - debug:
        msg: "Req-024 (3/3): FAILED"
  when: ansible_check_mode and set_sftp_chroot
