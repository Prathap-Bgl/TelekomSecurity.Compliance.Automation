---
# ------------------------------------------------------------------------
# Telekom Security - Compliance Automation - Hardening
# Linux OS for Servers (3.65)
# Tasks: 04 IPTables
# ------------------------------------------------------------------------

# Req 48:	If iptables is used, policies for loopback traffic must be configured.

- name: req-003.1 configure loopback traffic input rule
  iptables:
    chain: INPUT
    in_interface: lo
    jump: ACCEPT
  when: config_iptables == true and config_iptables_loopback == true

- name: req-003.2 configure loopback traffic output rule
  iptables:
    chain: OUTPUT
    out_interface: lo
    jump: ACCEPT
  when: config_iptables == true and config_iptables_loopback == true

- name: req-003.3 configure loopback traffic drop rule
  iptables:
    chain: INPUT
    source: 127.0.0.0/8
    jump: DROP
  when: config_iptables == true and config_iptables_loopback == true

# Req 49:	If iptables is used, policies for outbound and established connections
# must be configured.

- name: req-004.1 configure outbound connections
  iptables:
    chain: OUTPUT
    protocol: '{{ item }}'
    match: state
    ctstate: NEW,ESTABLISHED
    jump: ACCEPT
  with_items:
    - 'tcp'
    - 'udp'
    - 'icmp'
  when: config_iptables == true and config_iptables_outbound == true

- name: req-004.2 configure inbound connections
  iptables:
    chain: INPUT
    protocol: '{{ item }}'
    match: state
    ctstate: ESTABLISHED
    jump: ACCEPT
  with_items:
    - 'tcp'
    - 'udp'
    - 'icmp'
  when: config_iptables == true and config_iptables_outbound == true

# Req 50:	If iptables is used, policies must exist for all ports in listening
# state.

- name: req-005.1 configure rules for ssh
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ item }}"
    match: state
    ctstate: NEW
    jump: ACCEPT
  with_items: "{{ use_ssh_server_ports }}"
  when: config_iptables == true and
       ( config_ssh_server == true and config_iptables_rules == true )

- name: req-005.2 configure rules for udp
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: "{{ item }}"
    match: state
    ctstate: NEW
    jump: ACCEPT
  with_items: "{{ set_iptables_ports_udp }}"
  when: config_iptables == true and
       ( config_iptables_rules_udp == true and config_iptables_rules == true )

- name: req-005.3 configure rules for tcp
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ item }}"
    match: state
    ctstate: NEW
    jump: ACCEPT
  with_items: "{{ set_iptables_ports_tcp }}"
  when: config_iptables == true and
       ( config_iptables_rules_tcp == true and config_iptables_rules == true )

# Req 51:	If iptables is used, the default policy must be configured to drop all
# traffic.

- name: req-006.0 configure default deny policies
  iptables:
    chain: '{{ item }}'
    policy: DROP
  with_items:
    - 'INPUT'
    - 'OUTPUT'
    - 'FORWARD'
  when: config_iptables == true and config_iptables_default == true
