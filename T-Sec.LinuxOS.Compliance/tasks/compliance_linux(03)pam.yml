---
# ------------------------------------------------------------------------
# Telekom Security - Compliance Automation - Compliance Checks
# Linux OS for Servers (3.65)
# Tasks: 03 PAM
# ------------------------------------------------------------------------

# Req 44:	If PAM is used, an appropriate hashing function must be configured for
# password protection for PAM.

# Req 45:	If PAM is used, password rules must be configured for PAM to force the
# use of passwords with a minimum length of 8 characters and a combination of three
# out of the following categories: upper cases, lower case, numbers and special
# characters.

- name: req-049.1 uninstall outdated 'libpam-cracklib'
  package:
    name: 'libpam-cracklib'
    state: absent
  when: config_password_rules == true and ansible_os_family == "Debian"

- name: req-049.2 install 'libpam-pwquality'
  package:
    name: '{{ use_pam_pwquality }}'
    state: present
  when: config_password_rules == true

- name: req-049.3 set password complexity
  lineinfile:
    dest: '/etc/pam.d/common-password'
    state: present
    regexp: 'pam_pwquality.so'
    line: "password\trequisite\t\t\tpam_pwquality.so minlen={{ set_min_length }} minclass={{ set_min_class }} maxrepeat=3"
  when: config_password_rules == true and ansible_distribution == "ubuntu"

- name: req-049.4 set password length and encryption to sha-512
  lineinfile:
    dest: '/etc/pam.d/common-password'
    state: present
    regexp: 'pam_unix.so'
    line: "password\t[success=1 default=ignore]\tpam_unix.so obscure use_authtok try_first_pass sha512 minlen=8 remember=5"
  when: config_password_rules == true and ansible_distribution == "ubuntu"

# --- Compliance ---

- block:
    - name: req-049.1 check if libpam-cracklib is not installed
      package:
        name: 'libpam-cracklib'
        state: absent
      register: check_cracklib
      failed_when: (check_cracklib is changed)
  rescue:
    - debug:
        msg: " WARNING: Outdated libpam-cracklib is installed!"
  when: config_password_rules == true and ansible_os_family == "Debian"

- block:
    - name: req-049.2 check if libpam-pwquality is installed
      package:
        name: '{{ use_pam_pwquality }}'
        state: present
      register: check_pwquality
      failed_when: (check_pwquality is changed)
  rescue:
    - debug:
        msg: " WARNING: Needed libpam-pwquality is not installed!"

- block:
    - name: req-049.3 check password complexity
      lineinfile:
        dest: '/etc/pam.d/common-password'
        state: present
        regexp: 'pam_pwquality.so'
        line: "password\trequisite\t\t\tpam_pwquality.so minlen={{ set_min_length }} minclass={{ set_min_class }} maxrepeat=3"
      register: check_pw_complexity
      failed_when: (check_pw_complexity is changed)
  rescue:
    - debug:
        msg: " WARNING: Password complexity rules are not configured!"
  when: check_pwquality.changed == false and ansible_distribution == "ubuntu"

- block:
    - name: req-049.4 check if password length and encryption is correct
      lineinfile:
        dest: '/etc/pam.d/common-password'
        state: present
        regexp: 'pam_unix.so'
        line: "password\t[success=1 default=ignore]\tpam_unix.so obscure use_authtok try_first_pass sha512 minlen=8 remember=5"
      register: check_pw_length
      failed_when: (check_pw_length is changed)
  rescue:
    - debug:
        msg: " WARNING: Password length and encryption is not correct!"
  when: check_pwquality.changed == false and ansible_distribution == "ubuntu"

# Req 46:	If PAM is used, a protection against brute force and dictionary attacks
# that hinder pass-word guessing must be configured in PAM.

 name: req-050.0 set brute-force protection
  lineinfile:
    dest: '/etc/pam.d/common-auth'
    state: present
    insertbefore: 'pam_unix.so nullok_secure'
    line: "auth\trequired\t\t\tpam_tally2.so deny={{ set_failed_login_attemps }} onerr=fail unlock_time={{ set_unlock_time }} even_deny_root"
  when: config_bf_protection == true and ansible_distribution == "ubuntu"

# --- Compliance ---

- block:
    - name: req-050.0 check brute-force protection
      lineinfile:
        dest: '/etc/pam.d/common-auth'
        state: present
        insertbefore: 'pam_unix.so nullok_secure'
        line: "auth\trequired\t\t\tpam_tally2.so deny={{ set_failed_login_attemps }} onerr=fail unlock_time={{ set_unlock_time }} even_deny_root"
      register: check_bf_protection
      failed_when: (check_bf_protection is changed)
  rescue:
    - debug:
        msg: " WARNING: Brute-force protection is not correct configured!"
  when: ansible_distribution == "ubuntu"

# Req 47:	If PAM is used , PAM must be configured that motd did not contain any
# sensitive data.

- name: req-019.2 disable update-motd.d
  replace:
    dest: '{{ item }}'
    regexp: '^session\ +optional\ +pam_motd.so*'
    replace: '# session  optional  pam_motd.so'
  with_items:
    - "/etc/pam.d/login"
    - "/etc/pam.d/sshd"
  when: config_pam_motd == true

# --- Compliance ---

  - block:
      - name: req-019.2 check update-motd.d
        replace:
          dest: '{{ item }}'
          regexp: '^session\ +optional\ +pam_motd.so*'
          replace: '# session  optional  pam_motd.so'
        with_items:
          - "/etc/pam.d/login"
          - "/etc/pam.d/sshd"
        register: check_motd
        failed_when: check_motd.changed != false
    rescue:
      - debug:
          msg: "WARNING: Motd.d (PAM) includes sensitive data!"
